<?php
namespace Phpjaxrs\Bean;
use \ReflectionObject;
use Phpjaxrs\Bean\BeanContainer;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-26 at 20:46:02.
 */
class SymphonyClassloaderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var SymphonyClassloader
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
		$sourceClassLoader = new \Symfony\Component\ClassLoader\UniversalClassLoader();
		$sourceClassLoader->register();
		$sourceClassLoader->registerNamespace('Fixtures', __DIR__ . '/../../../fixtures');
		
        $this->object = new SymphonyClassloader($sourceClassLoader);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Phpjaxrs\Bean\SymphonyClassloader::getBeans
     * @todo   Implement testGetBeans().
     */
    public function testGetBeans()
    {
		$detectedBeans = $this->object->getBeans();
		$this->assertEquals(2, $detectedBeans->count());
    }
	
	public function testGetBeansTypes()
	{
		$detectedBeans = $this->object->getBeans();
		$firstBean = $detectedBeans[0];
		$secondBean = $detectedBeans[1];
		$this->assertEquals($firstBean->getBasePath(), "EggPlant");
		$this->assertEquals($secondBean->getBasePath(), "rosie");
	}
	
	public function testMethodDefinitions()
	{
		$detectedBeans = $this->object->getBeans();
		$firstBean = $detectedBeans[0];
		$reflectionObject = new ReflectionObject($firstBean);
		$aMap = $reflectionObject->getProperty('aCallMap');
		$aMap->setAccessible(true);
		$getValue = $aMap->getValue($firstBean);
		$this->assertEquals($getValue[BeanContainer::GET_ANNOTATION], 'giveMe');
		$this->assertEquals($getValue[BeanContainer::PUT_ANNOTATION], 'takeIt');
		$this->assertEquals($getValue[BeanContainer::POST_ANNOTATION], 'takeItAll');
		$this->assertEquals($getValue[BeanContainer::DELETE_ANNOTATION], 'removeMe');
	}
}
